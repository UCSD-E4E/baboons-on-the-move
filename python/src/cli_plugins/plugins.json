{
    "plugins": [
        {
            "module": "baseline",
            "class": "Baseline",
            "subcommands": [
                "baseline"
            ],
            "description": "Updates the baseline used by the test cases"
        },
        {
            "module": "calculate_metrics",
            "class": "CalculateMetrics",
            "subcommands": [
                "calc-metrics"
            ],
            "description": "Calculates metrics for the current algorithm"
        },
        {
            "module": "chart",
            "class": "Chart",
            "subcommands": [
                "chart",
                "flowchart"
            ],
            "description": "Generates flowchart dynamically from code"
        },
        {
            "module": "code",
            "class": "Code",
            "subcommands": [
                "code",
                "vscode"
            ],
            "description": "Opens VSCode with designated plugins"
        },
        {
            "module": "data",
            "class": "Data",
            "subcommands": [
                "data"
            ],
            "description": "Download data from team Google Drive"
        },
        {
            "module": "download_parameters",
            "class": "DownloadParameters",
            "subcommands": [
                "download-params"
            ],
            "description": "Download latest parameters from the cloud."
        },
        {
            "module": "encrypt_decrypt",
            "class": "Decrypt",
            "subcommands": [
                "decrypt"
            ],
            "description": "Decrypts data folder"
        },
        {
            "module": "encrypt_decrypt",
            "class": "Encrypt",
            "subcommands": [
                "encrypt"
            ],
            "description": "Encrypts data folder"
        },
        {
            "module": "format_files",
            "class": "FormatFiles",
            "subcommands": [
                "format"
            ],
            "description": "Format all python files to follow standard"
        },
        {
            "module": "generate",
            "class": "Generate",
            "subcommands": [
                "generate",
                "gen",
                "g"
            ],
            "description": "Generate Python files"
        },
        {
            "module": "lint",
            "class": "Lint",
            "subcommands": [
                "lint"
            ],
            "description": "Checks code for error using pylint, pyright, and black"
        },
        {
            "module": "optimize",
            "class": "Optimize",
            "subcommands": [
                "optimize"
            ],
            "description": "Optimize parameters."
        },
        {
            "module": "run",
            "class": "Run",
            "subcommands": [
                "run"
            ],
            "description": "Runs algorithm and display time of each step"
        },
        {
            "module": "shell",
            "class": "Shell",
            "subcommands": [
                "shell"
            ],
            "description": "Opens shell in virtual environment"
        },
        {
            "module": "docs",
            "class": "Docs",
            "subcommands": [
                "docs"
            ],
            "description": "Generates sphinx documentation"
        },
        {
            "module": "test",
            "class": "Test",
            "subcommands": [
                "test"
            ],
            "description": "Runs pytest unit and integration tests"
        }
    ]
}